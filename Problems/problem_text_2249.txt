Given two sorted arrays of integers, find a maximum sum path involving elements of both arrays whose sum is maximum. We can start from either array, but we can switch between arrays only through its common elements.

Example: 


Input:

X = { 3, 6, 7, 8, 10, 12, 15, 18, 100 }
Y = { 1, 2, 3, 5, 7, 9, 10, 11, 15, 16, 18, 25, 50 }


The maximum sum path is:

1 > 2 > 3 > 6 > 7 > 9 > 10 > 12 > 15 > 16 > 18 > 100

The maximum sum is 199


Approach-1: 

The idea is simple  calculate the sum between common elements present in both arrays and include the maximum sum in the output. For example, consider the following arrays X and Y having four common elements A, B, C, D:
X[]: [sum_x1  A  sum_x2  B  sum_x3  C  sum_x4  D  sum_x5]
Y[]: [sum_x1  A  sum_y2  B  sum_y3  C  sum_y4  D  sum_y5]
