Given a weighted directed acyclic graph (DAG) and a source vertex, find the shortest paths cost from the source vertex to all other vertices present in the graph. If the vertex cant be reached from the given source vertex, return its distance as infinity.

Example: 


dist(7, 0) = 6 (7 > 0)
dist(7, 1) = -2 (7 > 5 > 1)
dist(7, 2) = -6 (7 > 5 > 1 > 2)
dist(7, 3) = 4 (7 > 3)
dist(7, 4) = -1 (7 > 5 > 1 > 4)
dist(7, 5) = -4 (7 > 5)
dist(7, 6) = 6 (7 > 5 > 1 > 6)


Approach-1: 

We know that a Topological sort of a directed acyclic graph is a linear ordering of its vertices such that for every directed edge uv from vertex u to vertex v, u comes before v in the ordering.