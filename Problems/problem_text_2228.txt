Given an integer array, rearrange it such that every second element becomes greater than its left and right elements. Assume no duplicate elements are present in the array.

Example: 


Input: {1, 2, 3, 4, 5, 6, 7}
Output: {1, 3, 2, 5, 4, 7, 6}

Input: {9, 6, 8, 3, 7}
Output: {6, 9, 3, 8, 7}

Input: {6, 9, 2, 5, 1, 4}
Output: {6, 9, 2, 5, 1, 4}


Approach-1: 

A simple solution would be to sort the array in ascending order first. Then take another auxiliary array and fill it with elements starting from the sorted arrays two endpoints in alternate order. Following is the complete algorithm:
RearrangeArray(arr[], n)

Sort the array in ascending order.
Take two index variables i and j to that point to two endpoints of the array (i.e., i = 0 and j = n-1).
Create an auxiliary array A[] and initialize an index k with 0.
Do while (i < j)
A[k++] = arr[i++]
A[k++] = arr[j]
Print A[].

