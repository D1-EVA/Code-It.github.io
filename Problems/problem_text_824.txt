1984. Minimum Difference Between Highest and Lowest of K ScoresEasy32145Add to ListShareYou are given a 0-indexed integer array nums, where nums[i] represents the score of the ith student. You are also given an integer k.
Pick the scores of any k students from the array so that the difference between the highest and the lowest of the k scores is minimized.
Return the minimum possible difference.

Example 1:
Input: nums = [90], k = 1
Output: 0
Explanation: There is one way to pick score(s) of one student:
- [90]. The difference between the highest and lowest score is 90 - 90 = 0.
The minimum possible difference is 0.

Example 2:
Input: nums = [9,4,1,7], k = 2
Output: 2
Explanation: There are six ways to pick score(s) of two students:
- [9,4,1,7]. The difference between the highest and lowest score is 9 - 4 = 5.
- [9,4,1,7]. The difference between the highest and lowest score is 9 - 1 = 8.
- [9,4,1,7]. The difference between the highest and lowest score is 9 - 7 = 2.
- [9,4,1,7]. The difference between the highest and lowest score is 4 - 1 = 3.
- [9,4,1,7]. The difference between the highest and lowest score is 7 - 4 = 3.
- [9,4,1,7]. The difference between the highest and lowest score is 7 - 1 = 6.
The minimum possible difference is 2.

Constraints:

1 <= k <= nums.length <= 1000
0 <= nums[i] <= 105

Accepted22.5KSubmissions42.2KSeen this question in a real interview before?YesNoCompaniesRelated TopicsArraySliding WindowSortingSimilar QuestionsArray Partition IEasyShow Hint 1For the difference between the highest and lowest element to be minimized, the k chosen scores need to be as close to each other as possible.Show Hint 2What if the array was sorted?Show Hint 3After sorting the scores, any contiguous k scores are as close to each other as possible.Show Hint 4Apply a sliding window solution to iterate over each contiguous k scores, and find the minimum of the differences of all windows.