b'1916. Count Ways to Build Rooms in an Ant ColonyHard25134Add to ListShareYou are an ant tasked with adding n new rooms numbered 0 to n-1 to your colony. You are given the expansion plan as a 0-indexed integer array of length n, prevRoom, where prevRoom[i] indicates that you must build room prevRoom[i] before building room i, and these two rooms must be connected directly. Room 0 is already built, so prevRoom[0] = -1. The expansion\xc2\xa0plan is given such that once all the rooms are built, every room will be reachable from room 0.
You can only build one room at a time, and you can travel freely between rooms you have already built only if they are connected.\xc2\xa0You can choose to build any room as long as its previous room\xc2\xa0is already built.
Return the number of different orders you can build all the rooms in. Since the answer may be large, return it modulo 109 + 7.
\xc2\xa0
Example 1:

Input: prevRoom = [-1,0,1]
Output: 1
Explanation:\xc2\xa0There is only one way to build the additional rooms: 0 \xe2\x86\x92 1 \xe2\x86\x92 2

Example 2:

Input: prevRoom = [-1,0,0,1,2]
Output: 6
Explanation:
The 6 ways are:
0 \xe2\x86\x92 1 \xe2\x86\x92 3 \xe2\x86\x92 2 \xe2\x86\x92 4
0 \xe2\x86\x92 2 \xe2\x86\x92 4 \xe2\x86\x92 1 \xe2\x86\x92 3
0 \xe2\x86\x92 1 \xe2\x86\x92 2 \xe2\x86\x92 3 \xe2\x86\x92 4
0 \xe2\x86\x92 1 \xe2\x86\x92 2 \xe2\x86\x92 4 \xe2\x86\x92 3
0 \xe2\x86\x92 2 \xe2\x86\x92 1 \xe2\x86\x92 3 \xe2\x86\x92 4
0 \xe2\x86\x92 2 \xe2\x86\x92 1 \xe2\x86\x92 4 \xe2\x86\x92 3

\xc2\xa0
Constraints:

n == prevRoom.length
2 <= n <= 105
prevRoom[0] == -1
0 <= prevRoom[i] < n for all 1 <= i < n
Every room is reachable from room 0 once all the rooms are built.
Accepted3.7KSubmissions7.6KSeen this question in a real interview before?YesNoCompaniesRelated TopicsMathDynamic ProgrammingTreeGraphTopological SortCombinatoricsShow Hint 1Use dynamic programming.Show Hint 2Let dp[i] be the number of ways to solve the problem for the subtree of node i.Show Hint 3Imagine you are trying to fill an array with the order of traversal, dp[i] equals the multiplications of the number of ways to distribute the subtrees of the children of i on the array using combinatorics, multiplied bu their dp values.'
