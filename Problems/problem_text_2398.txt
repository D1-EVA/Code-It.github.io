Given an integer, swap adjacent bits of it. In other words, swap bits present at even positions with those present in odd positions.

Example: 


Input: 761622921 (00101101011001010111000110001001)

Output: 513454662 (00011110100110101011001001000110)

Explanation: (Every pair of adjacent bits swapped)

00 10 11 01 01 10 01 01 01 11 00 01 10 00 10 01
00 01 11 10 10 01 10 10 10 11 00 10 01 00 01 10


Approach-1: 

The idea is to separate bits present at even positions with bits present at odd positions using mask 0xAAAAAAAA and 0x55555555, respectively.
Mask 0xAAAAAAAA has all its even bits set, and its bitwise AND with n will separate bits present at even positions in n.
Similarly, mask 0x55555555 has all its odd bits set, and its bitwise AND with n will separate bits present at odd positions in n.
