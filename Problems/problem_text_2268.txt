Given an unsorted integer array, print all triplets in it with sum less than or equal to a given number.

Example: 


Input:

nums = [ 2, 7, 4, 9, 5, 1, 3 ]
sum = 10

Output: Triplets are

(1, 2, 3)
(1, 2, 4)
(1, 2, 5)
(1, 2, 7)
(1, 3, 4)
(1, 3, 5)
(1, 4, 5)
(2, 3, 4)
(2, 3, 5)


Approach-1: 

The idea is to sort the given array in ascending order and for each element nums[i] in the array, check if triplets can be formed by nums[i] and pairs from subarray [i+1n). This is demonstrated below in C++, Java, and Python:

Approach 2


We can also solve this problem using backtracking, as shown below. Thanks to Tamara Vasylenko for suggesting this alternative approach.