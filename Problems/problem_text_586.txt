1703. Minimum Adjacent Swaps for K Consecutive OnesHard42916Add to ListShareYou are given an integer array, nums, and an integer k. nums comprises of only 0's and 1's. In one move, you can choose two adjacent indices and swap their values.
Return the minimum number of moves required so that nums has k consecutive 1's.

Example 1:
Input: nums = [1,0,0,1,0,1], k = 2
Output: 1
Explanation: In 1 move, nums could be [1,0,0,0,1,1] and have 2 consecutive 1's.

Example 2:
Input: nums = [1,0,0,0,0,0,1,1], k = 3
Output: 5
Explanation: In 5 moves, the leftmost 1 can be shifted right until nums = [0,0,0,0,0,1,1,1].

Example 3:
Input: nums = [1,1,0,1], k = 2
Output: 0
Explanation: nums already has 2 consecutive 1's.


Constraints:

1 <= nums.length <= 105
nums[i] is 0 or 1.
1 <= k <= sum(nums)

Accepted6.2KSubmissions14.9KSeen this question in a real interview before?YesNoCompaniesRelated TopicsArrayGreedySliding WindowPrefix SumSimilar QuestionsMinimum Swaps to Group All 1's TogetherMediumMinimum Number of Operations to Make Array ContinuousHardShow Hint 1Choose k 1s and determine how many steps are required to move them into 1 group.Show Hint 2Maintain a sliding window of k 1s, and maintain the steps required to group them.Show Hint 3When you slide the window across, should you move the group to the right? Once you move the group to the right, it will never need to slide to the left again.