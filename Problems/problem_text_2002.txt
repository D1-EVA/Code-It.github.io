b'You are given a binary string A(i.e. with characters 0 and 1) consisting of characters A1, A2, ..., AN. In a single operation, you can choose two indices L and R such that 1 \xe2\x89\xa4 L \xe2\x89\xa4 R \xe2\x89\xa4 N and flip the characters AL, AL+1, ..., AR. By flipping, we mean change character 0 to 1 and vice-versa.\nYour aim is to perform ATMOST one operation such that in final string number of 1s is maximised.\nIf you don\'t want to perform the operation, return an empty array. Else, return an array consisting of two elements denoting L and R. If there are multiple solutions, return the lexicographically smallest pair of L and R.\nNOTE: Pair (a, b) is lexicographically smaller than pair (c, d) if a < c or, if a == c and b < d.\n\n\n\n\nInput Format: \n\nFirst and only argument is a string A.\n\nOutput Format: \n\nReturn an array of integers denoting the answer.\n\nExample Input: \n\nInput 1:\nA = "010"\nInput 2:\nA = "111"\n\n\n\n\nExample Output: \n\nOutput 1:\n[1, 1]\nOutput 2:\n[]\n\n\n\n\nExample Explanation: \n\nExplanation 1:\nA = "010"\n\nPair of [L, R] | Final string\n____________|__________\n[1 1]          | "110"\n[1 2]          | "100"\n[1 3]          | "101"\n[2 2]          | "000"\n[2 3]          | "001"\n\nWe see that two pairs [1, 1] and [1, 3] give same number of 1s in final string. So, we return [1, 1].\n\nExplanation 2:\nNo operation can give us more than three 1s in final string. So, we return empty array [].\n\n\n'