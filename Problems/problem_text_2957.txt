Given a string, find the longest substring containing distinct characters.

Example: 


Input: findlongestsubstring

Output: The longest substring with all distinct characters is dlongest or ubstring


Input: longestsubstr

Output: The longest substring with all distinct characters is longest


Input: abbcdafeegh

Output: The longest substring with all distinct characters is bcdafe


Input: aaaaaa

Output: The longest substring with all distinct characters is a


Approach-1: 

A simple solution would be to generate all the given string substrings and return the longest substring containing all distinct characters. The time complexity of this solution is O(n3) since it takes O(n2) time to generate all substrings for a string of length n and O(n) time to process each substring.
We can easily solve this problem in O(n) time. The idea is to use a sliding window technique. In the sliding window technique, a window is maintained that satisfies the problem constraints. The window is unstable if it violates the problem constraints, and it tries to stabilize by increasing or decreasing its size.