Given a binary tree, determine if it is a valid binary search tree (BST).
Assume a BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the nodes key.
The right subtree of a node contains only nodes with keys greater than the nodes key.
Both the left and right subtrees must also be binary search trees.

Example :
Input : 
   1
  /  \
 2    3

Output : 0 (False)


Input : 
  2
 / \
1   3

Output : 1 (True) 


Return 0 / 1 ( 0 for false, 1 for true ) for this problem
SOLUTION APPROACH :
        VIDEO : https://www.youtube.com/watch?v=yEwSGhSsT0U
Complete solution in the hints.
